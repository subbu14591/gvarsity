/* styles */
.recommend_titles {
   font-weight:bold;
   font-size:12px;
   border: #FFFFFF 1px solid;
   background-color: #F7F8F9;
}


.recommend_inbox {
   border: transparent 1px solid;
   background-color: transparent;
}
.recommend_inbox_alt {
   border: #FFFFFF 1px solid;
   background-color: #F9F9F9;
}
.vm_read {
    background-image:url(images/read.png);
   	background-position:center;
	background-repeat:no-repeat;
	padding-left:20px;
	padding-right:8px;
	padding-bottom:4px;
	padding-top:4px;
	width:26px;
	height:22px;
	vertical-align:middle;
	text-align:left;
}
.vm_unread {
   background-image:url(images/unread.png);
   	background-position:center;
	background-repeat:no-repeat;
	padding-left:20px;
	padding-right:8px;
	padding-bottom:4px;
	padding-top:4px;
	width:26px;
	height:22px;
	vertical-align:middle;
	text-align:left;
}

#draggable-nonvalid {background-color: #EEE;color: #333;border: 1px solid black;padding: 12px;}


/* jqModal base Styling courtesy of;
	Brice Burgess <bhb@iceburg.net> */

/* The Window's CSS z-index value is respected (takes priority). If none is supplied,
	the Window's z-index value will be set to 3000 by default (via jqModal.js). */
	
.jqmWindow {
    display: none;
    
    position: fixed;
    top: 17%;
    left: 50%;
    
    margin-left: -300px;
    width: 600px;
    
    background-color: #EEE;
    color: #333;
    border: 1px solid black;
    padding: 12px;
}

.jqmOverlay { background-color: #000; }

/* Background iframe styling for IE6. Prevents ActiveX bleed-through (<select> form elements, etc.) */
* iframe.jqm {position:absolute;top:0;left:0;z-index:-1;
	width: expression(this.parentNode.offsetWidth+'px');
	height: expression(this.parentNode.offsetHeight+'px');
}

/* Fixed posistioning emulation for IE6
     Star selector used to hide definition from browsers other than IE6
     For valid CSS, use a conditional include instead */
* html .jqmWindow {
     position: absolute;
     top: expression((document.documentElement.scrollTop || document.body.scrollTop) + Math.round(17 * (document.documentElement.offsetHeight || document.body.clientHeight) / 100) + 'px');
}